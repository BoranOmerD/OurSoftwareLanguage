%{
    #include <stdio.h>
    #include <stdlib.h>
    void yyerror(const char *s);
    extern int yylex();
%}

%token BEGIN END SEMICOLON INT_TYPE FLOAT_TYPE CHAR_TYPE
%token NUMBER IDENTIFIER

%left '+' '-'
%left '*' '/'

%%
program:
    BEGIN statements END
    ;

statements:
    statement
    | statements statement
    ;

statement:
    expression SEMICOLON
    | if_statement
    | for_statement
    | while_statement
    | switch_statement
    ;

expression:
    IDENTIFIER
    | NUMBER
    | expression '+' expression
    | expression '-' expression
    | expression '*' expression
    | expression '/' expression
    ;

if_statement:
    "if" '(' expression ')' statement
    ;

for_statement:
    "for" '(' expression ';' expression ';' expression ')' statement
    ;

while_statement:
    "while" '(' expression ')' statement
    ;

switch_statement:
    "switch" '(' expression ')' '{' case_statements '}'
    ;

case_statements:
    case_statement
    | case_statements case_statement
    ;

case_statement:
    "case" NUMBER ':' statements
    | "default" ':' statements
    ;

%%
void yyerror(const char *s)
{
    fprintf(stderr, "Error: %s\n", s);
}

int main(void)
{
    yyparse();
    return 0;
}
